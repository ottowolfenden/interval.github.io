:root {
    --screen-width: tan(atan2(var(--_w), 1px));
    --screen-height: tan(atan2(var(--_h), 1px));
    --correct-size: calc((min(var(--screen-width), var(--screen-height)) * 1px) / 1.5)
}

* {
    font-family: monospace;
}

body {
    background-color: black;
    color: white;
}

.minutes-input-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    align-items: center;

    &::selection {
        color: black;
        background-color: #89ddff;
    }

    .minutes-input {
        color: #ffffff;
        background-color: black;
        width: calc(var(--number-of-characters) * 0.55em);
        font-size: calc(var(--correct-size) / 2.5);
        text-align: center;
        appearance: textfield;
        outline: none;
        border: none;
        margin: 0;

        &:focus {
            color: #89ddff;
        }
    }
}

.inputs-container {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, 150%);
    width: max-content;
    font-size: max(calc(var(--correct-size) / 15), 14pt);

    .buttons-container {
        .start-timer-button {
            user-select: none;
            margin: 0;
            padding: 0;
            border-width: 0;
            float: left;
            font-size: inherit;
            border: none;
            background: transparent;
            color: #c3e88d;

            &:hover {
                text-decoration: underline;
                cursor: pointer;
            }

            &::selection {
                color: #c3e88d;
                background-color: transparent;
            }
        }

        .reset-timer-button {
            user-select: none;
            margin: 0;
            padding: 0;
            border-width: 0;
            float: right;
            font-size: inherit;
            border: none;
            background-color: transparent;
            color: #f07178;

            &:hover {
                text-decoration: underline;
                cursor: pointer;
            }

            &::selection {
                color: #f07178;
                background-color: transparent;
            }
        }
    }

    .interval-container {
        font-size: inherit;
        padding: 0;
        width: auto;

        &::selection {
            color: #ffcb6b;
            background-color: black;
        }

        & > span:hover {
            cursor: default;
            user-select: none;
        }

        .interval-input {
            border: none;
            font-size: inherit;
            margin: none;
            width: calc(var(--number-of-characters) * 0.55em);
            padding: none;
            background-color: black;
            color: #ffffff;
            outline: none;
            text-align: left;
            appearance: textfield;
            margin: 0;

            &:focus {
                color: #ffcb6b;
            }

            &::selection {
                color: black;
                background-color: #ffcb6b;
            }
        }
    }
}

.running-timer-container {
    .progress {
        display: flex;
        width: var(--correct-size);
        height: var(--correct-size);
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        border-radius: calc(infinity * 1px);
        background: conic-gradient(white calc(var(--progress) * 1%), transparent calc(var(--progress) * 1%));

        &:hover {
            cursor: pointer;
        }

        &:focus {
            outline: none;
        }

        .number {
            background: black;
            font-size: calc(var(--correct-size) / 2.5);
            width: calc(var(--correct-size) - (var(--correct-size) / 16));
            height: calc(var(--correct-size) - (var(--correct-size) / 16));
            border-radius: inherit;
            display: flex;
            align-items: center;
            justify-content: center;
            margin: auto;
            color: white;
        }
    }
}

/* get screen width and height variables */
@property --_w {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vw;
}

@property --_h {
    syntax: '<length>';
    inherits: true;
    initial-value: 100vh;
}

/* remove arrows on minutes-input */
input::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

input[type=number] {
    -moz-appearance: textfield;
    appearance: textfield;
}